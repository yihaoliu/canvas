{"dependencies":[],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//动画兼容\n\n\n//旋转角度函数 mx = mouse.x | my = mouse.y | ox = object.x | oy = object.y\nfunction RotationToMouse(mx, my, ox, oy) {\n  var dx = mx - ox;\n  var dy = my - oy;\n  var angle = Math.atan2(dy, dx);\n  return angle;\n}\n\nwindow.utils = {};\n//捕获坐标\nwindow.utils.captureMouse = function (element) {\n  var mouse = { x: 0, y: 0 };\n\n  element.addEventListener('mousemove', function (event) {\n    var x, y;\n    if (event.pageX || event.pageY) {\n      x = event.pageX;\n      y = event.pageY;\n    } else {\n      x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n      y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n    }\n\n    x -= element.offsetLeft;\n    y -= element.offsetTop;\n\n    mouse.x = x;\n    mouse.y = y;\n  }, false);\n\n  return mouse;\n};\n\n//获取触摸事件坐标\nfunction captureTouch(element) {\n  var touch = { x: null, y: null, isPressed: false, event: null },\n      body_scrollLeft = document.body.scrollLeft,\n      element_scrollLeft = document.documentElement.scrollLeft,\n      body_scrollTop = document.body.scrollTop,\n      element_scrollTop = document.documentElement.scrollTop,\n      offsetLeft = element.offsetLeft,\n      offsetTop = element.offsetTop,\n      phone = [\"ios\", \"android\", \"windowsPhone\"];\n  var os = getOS();\n  var operation = {\n    start: 'touchstart',\n    end: 'touchend',\n    move: 'touchmove'\n  };\n  if (phone.indexOf(os) == -1) {\n    operation = {\n      start: 'mousedown',\n      end: 'mouseup',\n      move: 'mousemove'\n    };\n  }\n\n  element.addEventListener(operation.start, function (event) {\n    touch.isPressed = true;\n    touch.event = event;\n    console.log(\"9999\", event);\n  }, false);\n\n  element.addEventListener(operation.end, function (event) {\n    touch.isPressed = false;\n    touch.x = null;\n    touch.y = null;\n    touch.event = event;\n  }, false);\n\n  element.addEventListener(operation.move, function (event) {\n    // var x, y,\n    //     touch_event = event.touches[0]; //first touch\n\n    // if (touch_event.pageX || touch_event.pageY) {\n    // x = touch_event.pageX;\n    // y = touch_event.pageY;\n    // } else {\n    // x = touch_event.clientX + body_scrollLeft + element_scrollLeft;\n    // y = touch_event.clientY + body_scrollTop + element_scrollTop;\n    // }\n    // x -= offsetLeft;\n    // y -= offsetTop;\n\n    // touch.x = x;\n    // touch.y = y;\n    // touch.event = event;\n  }, false);\n\n  return touch;\n};\n\nwindow.utils.parseColor = function (color, toNumber) {\n  if (toNumber === true) {\n    if (typeof color === 'number') {\n      return color | 0; //chop off decimal\n    }\n    if (typeof color === 'string' && color[0] === '#') {\n      color = color.slice(1);\n    }\n    return window.parseInt(color, 16);\n  } else {\n    if (typeof color === 'number') {\n      color = '#' + ('00000' + (color | 0).toString(16)).substr(-6); //pad\n    }\n    return color;\n  }\n};\n\n//将16进制颜色转换成rgb\nwindow.utils.colorToRGB = function (color, alpha) {\n  //如果是字符串格式，转换为数字\n  if (typeof color === \"string\" && color[0] === \"#\") {\n\n    //parseInt(('#ffffff').slice(1),16) 为 16777215\n    color = window.parseInt(color.slice(1), 16);\n  }\n  alpha = alpha === undefined ? 1 : alpha;\n\n  //将color转换成r,g,b值，>>右移  <<左移\n  var r = color >> 16 & 0xff; //例如：16777215 >> 16 变成 255， 255 & 0xff为255\n  var g = color >> 8 & 0xff;\n  var b = color & 0xff;\n  a = alpha < 0 ? 0 : alpha > 1 ? 1 : alpha;\n\n  if (a === 1) {\n    return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n  } else {\n    return \"rgb(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\n  }\n};\n\nwindow.utils.containsPoint = function (rect, x, y) {\n  return !(x < rect.x || x > rect.x + rect.width || y < rect.y || y > rect.y + rect.height);\n};\n\nwindow.utils.intersects = function (rectA, rectB) {\n  return !(rectA.x + rectA.width < rectB.x || rectB.x + rectB.width < rectA.x || rectA.y + rectA.height < rectB.y || rectB.y + rectB.height < rectA.y);\n};\n\nfunction startLoop(callback) {\n  // console.log(window,\"ppp\")\n  // return;\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }\n  return window.requestAnimationFrame(callback);\n}\nfunction endLoop(callback) {\n  if (!window.cancelAnimationFrame) {\n    window.cancelAnimationFrame = window.cancelRequestAnimationFrame || window.webkitCancelAnimationFrame || window.webkitCancelRequestAnimationFrame || window.mozCancelAnimationFrame || window.mozCancelRequestAnimationFrame || window.msCancelAnimationFrame || window.msCancelRequestAnimationFrame || window.oCancelAnimationFrame || window.oCancelRequestAnimationFrame || window.clearTimeout;\n  }\n\n  return window.cancelAnimationFrame(callback);\n}\nfunction getWindowDetil() {\n  var winHeight = 0;\n  var winWidth = 0;\n  if (window.innerWidth) winWidth = window.innerWidth;else if (document.body && document.body.clientWidth) winWidth = document.body.clientWidth; //获取窗口高度\n  if (window.innerHeight) winHeight = window.innerHeight;else if (document.body && document.body.clientHeight) winHeight = document.body.clientHeight; //通过深入Document内部对body进行检测，获取窗口大小\n  if (document.documentElement && document.documentElement.clientHeight && document.documentElement.clientWidth) {\n    winHeight = document.documentElement.clientHeight;\n    winWidth = document.documentElement.clientWidth;\n  }\n  return {\n    width: winWidth - 15,\n    height: winHeight - 15\n  };\n}\nfunction getOS() {\n  var userAgent = 'navigator' in window && 'userAgent' in navigator && navigator.userAgent.toLowerCase() || '';\n  var vendor = 'navigator' in window && 'vendor' in navigator && navigator.vendor.toLowerCase() || '';\n  var appVersion = 'navigator' in window && 'appVersion' in navigator && navigator.appVersion.toLowerCase() || '';\n\n  if (/mac/i.test(appVersion)) return 'MacOSX';\n  if (/win/i.test(appVersion)) return 'windows';\n  if (/linux/i.test(appVersion)) return 'linux';\n  if (/iphone/i.test(userAgent) || /ipad/i.test(userAgent) || /ipod/i.test(userAgent)) 'ios';\n  if (/android/i.test(userAgent)) return 'android';\n  if (/win/i.test(appVersion) && /phone/i.test(userAgent)) return 'windowsPhone';\n}\nexports.default = {\n  startLoop: startLoop,\n  endLoop: endLoop,\n  getWindowDetil: getWindowDetil,\n  captureTouch: captureTouch,\n  getOS: getOS\n};"},"hash":"d4fa8d9186428b20bf016cf156077002"}